# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  python: circleci/python@1.5.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-test-run: 
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - run:
          command: |
              virtualenv .venv;
              echo "source .venv/bin/activate" >> $BASH_ENV;

      - save_cache:
          key: pydeps-v01__{{ checksum "requirements.txt" }}
          paths:
              - ".venv"
              - "~/.cache/pip"    # (pip cache dir)

      - python/install-packages:
          pkg-manager: pip
          # app-dir: ~/project/package-directory/  # If you're requirements.txt isn't in the root directory.
          # pip-dependency-file: test-requirements.txt  # if you have a different name for your requirements file, maybe one that combines your runtime and test requirements.
  
      - run: 
          name: Install dependencies 
          command: poetry install

      - run: 
          name: Install packages and check dependencies
          command: poetry show --latest

      - run:
          name: Poetry testing
          # This assumes pytest is installed via the install-package step above
          command: poetry check 

      - run:
          name: Poetry run 
          # This assumes pytest is installed via the install-package step above
          command: poetry run dr 

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-test-run

